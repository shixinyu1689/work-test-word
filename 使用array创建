#include <iostream>
#include <algorithm>

template <typename T>
class ArrayOps {
private:
    T* arr;
    int size;
public:
    ArrayOps(T* a, int s) : arr(a), size(s) {}

    // 对数组进行排序
    void sortArray() {
        std::sort(arr, arr + size);
    }

    // 对数组元素求和
    T sumArray() {
        T sum = 0;
        for (int i = 0; i < size; i++) {
            sum += arr[i];
        }
        return sum;
    }
};

int main() {
    int intArr[] = {5, 3, 8, 1, 9};
    ArrayOps<int> intOps(intArr, 5);

    intOps.sortArray();
    int intSum = intOps.sumArray();

    std::cout << "Sorted Int Array: ";
    for (int i = 0; i < 5; i++) {
        std::cout << intArr[i] << " ";
    }
    std::cout << std::endl;
    std::cout << "Sum of Int Array: " << intSum << std::endl;

    double doubleArr[] = {2.5, 1.3, 3.8, 4.1, 0.9};
    ArrayOps<double> doubleOps(doubleArr, 5);

    doubleOps.sortArray();
    double doubleSum = doubleOps.sumArray();

    std::cout << "Sorted Double Array: ";
    for (int i = 0; i < 5; i++) {
        std::cout << doubleArr[i] << " ";
    }
    std::cout << std::endl;
    std::cout << "Sum of Double Array: " << doubleSum << std::endl;

    return 0;
}